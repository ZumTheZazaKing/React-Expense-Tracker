{"version":3,"sources":["reportWebVitals.js","MoneyTeller.js","TransHistory.js","Input.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MoneyTeller","props","className","balance","income","Math","abs","expense","TransHistory","historyArr","history","historyList","map","amount","search","title","time","shortenedHistoryList","slice","onClick","e","historyAllRef","current","id","ref","Input","onSubmit","processTransaction","type","placeholder","value","inputTitle","maxLength","onChange","changeTitle","required","inputAmount","changeAmount","App","useState","localStorage","getItem","setIncome","setBalance","setExpense","JSON","parse","setHistory","setInputTitle","setInputAmount","useRef","target","preventDefault","currentDateTime","Date","toLocaleString","indexOf","Number","setItem","parseFloat","toFixed","stringify","el","ReactDOM","render","document","getElementById"],"mappings":"wLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,OCPP,SAASQ,EAAYC,GAExB,OAAO,sBAAKC,UAAU,QAAf,UACH,sBAAKA,UAAU,UAAf,UACI,8CACA,kCAAKD,EAAME,cAEf,sBAAKD,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,wCACA,kCAAKD,EAAMG,aAEf,sBAAKF,UAAU,UAAf,UACI,yCACA,kCAAKG,KAAKC,IAAIL,EAAMM,qBCd7B,SAASC,EAAaP,GAEzB,IAAMQ,EAAaR,EAAMS,QACnBC,EAAcF,EACnBG,KAAI,SAAAF,GAAO,OAAI,qBAAIR,WAA4C,IAAjCQ,EAAQG,OAAOC,OAAO,MAAe,UAAY,SAAhE,UACXJ,EAAQK,MADG,KACK,qCAAQL,EAAQM,KAAhB,OADL,KACqCN,EAAQG,aAGvDI,EAAuBR,EAC5BS,MAAM,EAAE,GACRN,KAAI,SAAAF,GAAO,OAAI,qBAAIR,WAA4C,IAAjCQ,EAAQG,OAAOC,OAAO,MAAe,UAAY,SAAhE,UACXJ,EAAQK,MADG,KACK,qCAAQL,EAAQM,KAAhB,OADL,KACqCN,EAAQG,aAG7D,OAAO,sBAAKX,UAAU,UAAf,UACH,0CAAY,sBAAMiB,QAAS,SAAAC,GAAC,OAAInB,EAAMoB,cAAcC,QAAQpB,UAAU,IAA1D,yBACZ,uBACA,6BAAKe,IACL,qBAAKM,GAAG,aAAarB,UAAU,OAAOsB,IAAKvB,EAAMoB,cAAjD,SACI,sBAAKE,GAAG,oBAAR,UACI,mBAAGJ,QAAS,SAAAC,GAAC,OAAInB,EAAMoB,cAAcC,QAAQpB,UAAU,QAAvD,kBACA,yCACA,6BAAKS,YCtBd,SAASc,EAAMxB,GAClB,OAAO,sBAAKC,UAAU,QAAf,UACH,qDACA,uBACA,uBAAMwB,SAAUzB,EAAM0B,mBAAtB,UACI,uBACA,2CAAqB,uBACrB,uBAAOC,KAAK,OAAOC,YAAY,wBAAwBC,MAAO7B,EAAM8B,WAAYC,UAAW,GAAIC,SAAUhC,EAAMiC,YAAaC,UAAQ,IACpI,uBAAK,uBACL,4CAAc,uBAAd,mBAAmC,uBAAnC,yBAAmE,uBACnE,uBAAOP,KAAK,SAASC,YAAY,gBAAgBC,MAAO7B,EAAMmC,YAAaH,SAAUhC,EAAMoC,aAAcF,UAAQ,IACjH,uBAAK,uBACL,uBAAOP,KAAK,SAASE,MAAM,0BCHvC,SAASQ,IAEP,MAA0BC,mBAASC,aAAaC,QAAQ,yCAAyC,GAAjG,mBAAKrC,EAAL,KAAasC,EAAb,KACA,EAA4BH,mBAASC,aAAaC,QAAQ,0CAA0C,GAApG,mBAAKtC,EAAL,KAAcwC,EAAd,KACA,EAA4BJ,mBAASC,aAAaC,QAAQ,0CAA0C,GAApG,mBAAKlC,EAAL,KAAcqC,EAAd,KAEA,EAA4BL,mBAASM,KAAKC,MAAMN,aAAaC,QAAQ,2CAA2C,IAAhH,mBAAK/B,EAAL,KAAcqC,EAAd,KAEA,EAAkCR,mBAAS,IAA3C,mBAAKR,EAAL,KAAiBiB,EAAjB,KAEA,EAAoCT,mBAAS,IAA7C,mBAAKH,EAAL,KAAkBa,EAAlB,KAGI5B,EAAgB6B,mBA6BpB,OAAO,sBAAKhD,UAAU,YAAf,UAEL,iDACA,uBACA,cAACF,EAAD,CACAI,OAAQA,EACRD,QAASA,EACTI,QAASA,IACT,uBACA,cAACC,EAAD,CACAE,QAASA,EACTW,cAAeA,IACf,uBACA,cAACI,EAAD,CACAM,WAAYA,EACZK,YAAaA,EACbF,YAjDkB,SAAAd,GAAC,OAAI4B,EAAc5B,EAAE+B,OAAOrB,QAkD9CO,aAhDmB,SAAAjB,GAAC,OAAI6B,EAAe7B,EAAE+B,OAAOrB,QAiDhDH,mBA7CF,SAA4BP,GAC1BA,EAAEgC,iBAEF,IAAIC,EAAkBC,OAAOC,iBAC7BF,EAAkBA,EAAgBnC,MAAM,EAAEmC,EAAgBG,QAAQ,MAElEb,EAAWc,OAAOtD,GAAWsD,OAAOrB,IACpCI,aAAakB,QAAQ,wCAAyCD,OAAOtD,GAAWsD,OAAOrB,KAEtD,IAA9BA,EAAYtB,OAAO,OACpB8B,EAAWa,OAAOlD,GAAWkD,OAAOrB,IACpCI,aAAakB,QAAQ,wCAAyCD,OAAOlD,GAAWkD,OAAOrB,MAGvFM,EAAUe,OAAOrD,GAAUqD,OAAOrB,IAClCI,aAAakB,QAAQ,uCAAwCD,OAAOrD,GAAUqD,OAAOrB,KAIvFW,EAAW,CAAC,CAAChC,MAAOgB,EAAWf,KAAKqC,EAAiBxC,OAAO8C,WAAWvB,GAAawB,QAAQ,KAAlF,mBAA0FlD,KACpG8B,aAAakB,QAAQ,wCAAyCb,KAAKgB,UAAL,CAAgB,CAAC9C,MAAOgB,EAAYf,KAAKqC,EAAiBxC,OAAO8C,WAAWvB,GAAawB,QAAQ,KAAjG,mBAAyGlD,MAEvKsC,EAAc,IACdC,EAAe,UA4BnB,IAAMa,EAAK,cAACxB,EAAD,IAEXyB,IAASC,OAAOF,EAAIG,SAASC,eAAe,SAK5C3E,M","file":"static/js/main.58d8da38.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function MoneyTeller(props){\n\n    return <div className=\"money\">\n        <div className=\"balance\">\n            <h3>YOUR BALANCE</h3>\n            <p>${props.balance}</p>\n        </div>\n        <div className=\"others\">\n            <div className=\"income\">\n                <h3>INCOME</h3>\n                <p>${props.income}</p>\n            </div>\n            <div className=\"expense\">\n                <h3>EXPENSE</h3>\n                <p>${Math.abs(props.expense)}</p>\n            </div>\n        </div>\n    </div>\n}","export function TransHistory(props){\n\n    const historyArr = props.history;\n    const historyList = historyArr\n    .map(history => <li className={history.amount.search(/-/g) !== -1 ? \"expense\" : \"income\"}>\n        {history.title} |<span> {history.time} </span>| {history.amount}\n        </li>);\n\n    const shortenedHistoryList = historyArr\n    .slice(0,4)\n    .map(history => <li className={history.amount.search(/-/g) !== -1 ? \"expense\" : \"income\"}>\n        {history.title} |<span> {history.time} </span>| {history.amount}\n        </li>);\n\n    return <div className=\"history\">\n        <h4>History <span onClick={e => props.historyAllRef.current.className=\"\"}>VIEW ALL</span></h4>\n        <hr/>\n        <ul>{shortenedHistoryList}</ul>\n        <div id=\"historyAll\" className=\"hide\" ref={props.historyAllRef}>\n            <div id=\"historyAllContent\">\n                <p onClick={e => props.historyAllRef.current.className=\"hide\"}>&times;</p>\n                <h2>History</h2>\n                <ul>{historyList}</ul>\n            </div>\n        </div>\n    </div>\n}","export function Input(props){\n    return <div className=\"input\">\n        <h4>Add new transaction</h4>\n        <hr/>\n        <form onSubmit={props.processTransaction}>\n            <br/>\n            <label>Title:</label><br/>\n            <input type=\"Text\" placeholder=\"No more than 20 words\" value={props.inputTitle} maxLength={20} onChange={props.changeTitle} required/>\n            <br/><br/>\n            <label>Amount:<br/>e.g. 50 = Income<br/>e.g. -100 = Expense</label><br/>\n            <input type=\"number\" placeholder=\"e.g. 50, -100\" value={props.inputAmount} onChange={props.changeAmount} required/>\n            <br/><br/>\n            <input type=\"submit\" value=\"Add Transaction\"/>\n        </form>\n    </div>\n}","import React, { useState,useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport { MoneyTeller } from './MoneyTeller.js';\nimport { TransHistory } from './TransHistory.js';\nimport { Input } from './Input.js';\n\nfunction App(){\n\n  let [income, setIncome] = useState(localStorage.getItem(\"zumthezazaking_expenseTracker_income\")||0);\n  let [balance, setBalance] = useState(localStorage.getItem(\"zumthezazaking_expenseTracker_balance\")||0);\n  let [expense, setExpense] = useState(localStorage.getItem(\"zumthezazaking_expenseTracker_expense\")||0);\n\n  let [history, setHistory] = useState(JSON.parse(localStorage.getItem(\"zumthezazaking_expenseTracker_history\"))||[]);\n\n  let [inputTitle, setInputTitle] = useState(\"\");\n  const changeTitle = e => setInputTitle(e.target.value);\n  let [inputAmount, setInputAmount] = useState(\"\");\n  const changeAmount = e => setInputAmount(e.target.value);\n\n  let historyAllRef = useRef();\n\n  function processTransaction(e){\n    e.preventDefault();\n\n    let currentDateTime = Date().toLocaleString();\n    currentDateTime = currentDateTime.slice(0,currentDateTime.indexOf(\"G\"));\n\n    setBalance(Number(balance) + Number(inputAmount));\n    localStorage.setItem(\"zumthezazaking_expenseTracker_balance\", Number(balance) + Number(inputAmount));\n\n    if(inputAmount.search(/-/g) !== -1){\n      setExpense(Number(expense) + Number(inputAmount));\n      localStorage.setItem(\"zumthezazaking_expenseTracker_expense\", Number(expense) + Number(inputAmount));\n\n    } else {\n      setIncome(Number(income) + Number(inputAmount));\n      localStorage.setItem(\"zumthezazaking_expenseTracker_income\", Number(income) + Number(inputAmount));\n\n    }\n\n    setHistory([{title: inputTitle,time:currentDateTime, amount:parseFloat(inputAmount).toFixed(2)}, ...history])\n    localStorage.setItem(\"zumthezazaking_expenseTracker_history\", JSON.stringify([{title: inputTitle, time:currentDateTime, amount:parseFloat(inputAmount).toFixed(2)}, ...history]));\n\n    setInputTitle(\"\");\n    setInputAmount(\"\");\n\n  }\n\n  return <div className=\"container\">\n\n    <h3>Expense Tracker</h3>\n    <br/>\n    <MoneyTeller\n    income={income}\n    balance={balance}\n    expense={expense}/>\n    <br/>\n    <TransHistory \n    history={history} \n    historyAllRef={historyAllRef}/>\n    <br/>\n    <Input\n    inputTitle={inputTitle}\n    inputAmount={inputAmount}\n    changeTitle={changeTitle}\n    changeAmount={changeAmount}\n    processTransaction={processTransaction}/>\n    \n  </div>\n}\n\n\nconst el = <App/>;\n\nReactDOM.render(el, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}